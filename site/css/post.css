article {
	width: 55em;
	margin-left: auto;
	margin-right: auto;
	line-height: 150%;
	font-size: 115%;
	padding-left: 2em;
	padding-right: 2em;
	border-left: 2px solid #484850;
	border-right: 2px solid #484850;
	background-color: #44444c;
	flex: auto;
}

article h2 {
	font-size: 130%;
}

article h3 {
	font-size: 130%;
	font-weight: normal;
}

article .date {
	text-align: right;
	font-size: 85%;
}

article .date .edit {
	font-style: italic;
}

nav {
	text-align: left;
}

pre {
	text-align: left;
	background-color: #333340;
	width: 80%;
	margin: auto;
	padding: 1em;
	font-family: Courier, Monospace;
	overflow: scroll;
}

blockquote {
	background-color: #556;
	width: 85%;
	margin: 1em auto 1em auto;
	padding: 0.5em 1em 0.5em 1em;
}

blockquote::before {
	content: "Quote:";
	font-size: 70%;
	display: flex;
	align-items: left;
	padding: 0;
	margin: 0;
}

/* article is 55em+2em+2em=59em wide and uses 115% sized font */
/* 59em in 115% font size is 67.85em in 100% font size */
/* so the below query kicks in seamlessly right when article would no longer fit */
@media only screen and (max-width: 67.85em) {
	article {
		width: 100vw;
		box-sizing: border-box;
		border: none;
	}
}

@media only screen and (max-width: 45em) {
	article {
		width: 100vw;
		box-sizing: border-box;
		padding-left: 0.5em;
		padding-right: 0.5em;
		border: none;
	}

	pre {
		width: 100%;
		margin: -0.5em;
		margin-bottom: 0.5em;
		padding: 0 0.5em 0 0.5em;
	}

	ul {
		max-width: 100%;
	}
}


/* code highlighting for pandoc output
 * structure was generated by pandoc, values are mine */

code span.al { color: #ff5; } /* Alert */
code span.an { color: #eee; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { } /* Attribute */
code span.bn { color: #ec4f9b; } /* BaseN */
code span.bu { color: #e4642f; } /* BuiltIn */
code span.cf { color: #3a9fe6; font-weight: bold; } /* ControlFlow */
code span.ch { color: #c99c14; } /* Char */
code span.cn { } /* Constant */
code span.co { color: #eee; font-style: italic; } /* Comment */
code span.do { color: #eee; font-style: italic; } /* Documentation */
code span.dt { color: #99ad14; } /* DataType */
code span.dv { color: #ec4f9b; } /* DecVal */
code span.er { color: #f55; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #ec4f9b; } /* Float */
code span.fu { color: #e4642f; } /* Function */
code span.im { color: #6ff; } /* Import */
code span.in { color: #eee; font-style: italic; } /* Information */
code span.kw { color: #3a9fe6; font-weight: bold; } /* Keyword */
code span.op { color: #aff; } /* Operator */
code span.pp { font-weight: bold; } /* Preprocessor */
code span.sc { color: #c99c14; } /* SpecialChar */
code span.ss { color: #c99c14; } /* SpecialString */
code span.st { color: #c99c14; } /* String */
code span.va { } /* Variable */
code span.vs { color: #c99c14; } /* VerbatimString */
code span.wa { color: #ff5; font-weight: bold; } /* Warning */
